{"version":3,"sources":["components/titles.js","components/form.js","components/weather.js","components/time.js","App.js","components/location.js","components/current_location.js","index.js"],"names":["Titles","react_default","a","createElement","className","React","Component","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","e","alert","input","value","preventDefault","onSubmit","getWeather","type","name","placeholder","Weather","city","country","temperature","toFixed","minimum","maximum","pressure","humidity","icon","description","error","Time","state","time","Date","setState","_this2","setInterval","currentTime","toLocaleDateString","toLocaleTimeString","API_KEY","App","undefined","_callee","api_call","data","regenerator_default","wrap","_context","prev","next","target","elements","fetch","concat","sent","json","main","temp","sys","temp_min","temp_max","weather","stop","titles","components_form","components_weather","Location","fetchData","url","buildUrlApi","axios","get","then","response","newData","i","list","length","push","days","dt","temps","Math","round","minTemps","maxTemps","wind","speed","icons","encodeURIComponent","location","join","changeLocation","inputLocation","locationInput","setIndex","index","displayIndex","daysFull","_this$state","defaultValue","ref","map","item","key","style","border","dist_default","unix","format","width","height","src","CurrentLocation","currentData","dayOfWeekFull","currentDayFull","dt_txt","getDay","currentTemp","currentMinTemp","currentMaxTemp","currentHumidity","currentPressure","currentWind","currentWeather","currentIcon","dayFull","console","log","toConsumableArray","slice","find","onClick","alt","Home","src_App_0","Daily","components_location","Hourly","current_location","ReactDOM","render","BrowserRouter","Link","to","Route","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.faf982fc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Titles extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className = \"title\">\r\n                <h1 className = \"headeer\">\r\n                    Welcome to weather forcasst. We apprecite your valuable time.\r\n                </h1>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Titles;","import React from 'react';\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleSubmit(e) {\r\n        alert('You Submit your name: ' + this.input.value);\r\n        e.preventDefault();\r\n      }\r\n    \r\n    render(){\r\n        return (\r\n            // <div>\r\n            //     <form onSubmit={this.handleSubmit}>\r\n            //         <label>\r\n            //             Name:\r\n            //             <input type=\"text\" ref={(input) => this.input = input} />\r\n            //         </label> \r\n            //         <input type=\"submit\" value=\"Submit\" />\r\n            //     </form>\r\n                \r\n            // </div>\r\n            <form className = \"search_form\" onSubmit = {this.props.getWeather}>\r\n                <div>\r\n                    CITY : <input className=\"city\" type =\"text\" name =\"city\" placeholder = \"city......\" />\r\n                </div>\r\n                <div>\r\n                    COUNTRY : <input className=\"country\" type =\"text\" name =\"country\" placeholder = \"country......\" />\r\n                </div>\r\n                <div>\r\n                    <button className=\"form_button\">Get Weather</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nclass Weather extends React.Component {\r\n\r\n\r\n    render(){\r\n        \r\n        return (\r\n\r\n            <div className = \"result\">\r\n                <div className = \"result_text\">\r\n                    <h1>{this.props.city && this.props.country && <p>{this.props.city} , {this.props.country}</p>}</h1>\r\n\r\n                    {this.props.temperature && <p>Temperature: {(this.props.temperature -273.15).toFixed(2)} &deg;C </p>}\r\n\r\n                    {this.props.minimum && <p>Minimum Temperature: {(this.props.minimum -273.15).toFixed(2)} &deg;C </p>}\r\n\r\n                    {this.props.maximum && <p>Maximum Temperature: {(this.props.maximum -273.15).toFixed(2)} &deg;C </p>}\r\n\r\n                    {this.props.pressure && <p>Pressure: {(this.props.pressure)} hPA</p>}\r\n\r\n                    {this.props.humidity && <p>Humidity: {this.props.humidity}</p>}\r\n\r\n                    {this.props.icon && <p> {this.props.icon}</p>}\r\n\r\n                    {this.props.description &&  <p>Description: {this.props.description}</p>}\r\n\r\n                    {this.props.error && <h1>{this.props.error}</h1>}\r\n                </div>\r\n            </div>\r\n        ); \r\n    }\r\n};\r\n\r\nexport default Weather;","import React from \"react\";\r\n\r\nclass Time extends React.Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {time:new Date()}\r\n    }\r\n\r\n    currentTime(){\r\n        this.setState({\r\n            time:new Date()\r\n        })\r\n    }\r\n\r\n    componentWillMount(){\r\n        setInterval (() => this.currentTime(),1000)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>\r\n                  Local Time\r\n                </h1>\r\n                <h1>\r\n                    {this.state.time.toLocaleDateString()}\r\n                    \r\n                </h1>\r\n                <h1>\r\n                    {this.state.time.toLocaleTimeString()}\r\n                    \r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Time;","import React from 'react';\nimport './App.css';\n\nimport Titles from \"./components/titles\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\n\nimport Time from './components/time';\n\n\nconst API_KEY = \"b7d967612159884789686c4f5c41c455\";\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    pressure: undefined,\n    minimum: undefined,\n    maximum: undefined,\n    icon: undefined,\n    error: undefined\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city =e.target.elements.city.value;\n    const country =e.target.elements.country.value;\n    const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n    const data = await api_call.json();\n\n\n    \n\n    if (city && country){\n      \n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        pressure: data.main.pressure,\n        minimum: data.main.temp_min,\n        maximum: data.main.temp_max,\n        icon: data.weather[0].icon,\n        description: data.weather[0].description,\n        error: \"\"\n      })  \n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        icon: undefined,\n        pressure: undefined,\n        minimum: undefined,\n        maximum: undefined,\n        error: \"Please insert your country and city\"\n      })\n    }\n    }\n  \n\n  render() {\n    return (\n      <div className=\"app\">\n        <Titles />\n        <div className= \"time\">\n        <Time />\n        </div>\n        <div className = \"weather\">\n          <Form getWeather = {this.getWeather}/>\n          <Weather \n          temperature = {this.state.temperature}\n          pressure = {this.state.pressure}\n          minimum = {this.state.minimum}\n          maximum = {this.state.maximum}\n          city= {this.state.city}\n          country = {this.state.country}\n          humidity = {this.state.humidity}\n          icon =  {this.state.icon}\n          description = {this.state.description}\n          error = {this.state.error}\n        />\n        </div> \n\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\r\nimport axios from 'axios';\r\nimport Moment from \"react-moment\";\r\nimport Titles from \"./titles\";\r\n\r\nclass Location extends React.Component {\r\n constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     data: {},\r\n     location: \"Miami\",\r\n     days: [],\r\n     daysFull: [],\r\n     temps: [],\r\n     minTemps: [],\r\n     maxTemps: [],\r\n     humidity: [],\r\n     pressure: [],\r\n     wind: [],\r\n     weather: [],\r\n     icons: [],\r\n     newData:[]\r\n   };\r\n }\r\n\r\n fetchData = () => {\r\n   const url = this.buildUrlApi();\r\n\r\n   axios.get(url).then(response => {\r\n     this.setState({\r\n       data: response.data\r\n     });\r\n\r\n\r\n     const newData =[];\r\n\r\n     for (let i = 0; i < this.state.data.list.length; i = i+1){  \r\n       newData.push({\r\n         days:this.state.data.list[i].dt,\r\n         temps:Math.round(this.state.data.list[i].main.temp),\r\n         minTemps:this.state.data.list[i].main.temp_min,\r\n         maxTemps:this.state.data.list[i].main.temp_max,\r\n         humidity:this.state.data.list[i].main.humidity,\r\n         pressure:this.state.data.list[i].main.pressure,\r\n         wind:this.state.data.list[i].wind.speed,\r\n         weather:this.state.data.list[i].weather[0].description,\r\n         icons:this.state.data.list[i].weather[0].icon\r\n       })\r\n     }\r\n\r\n     this.setState({\r\n      newData ,\r\n     });\r\n   });\r\n };\r\n\r\n buildUrlApi = () => {\r\n   const location = encodeURIComponent(this.state.location);\r\n   const urlPrefix = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\r\n   const urlSuffix = \"&APPID=b7d967612159884789686c4f5c41c455&units=metric\";\r\n   return [urlPrefix, location, urlSuffix].join(\"\");\r\n };\r\n\r\n componentDidMount() {\r\n   this.fetchData();\r\n }\r\n\r\n changeLocation = e => {\r\n   e.preventDefault();\r\n   const inputLocation = this.locationInput.value;\r\n   this.setState(\r\n     {\r\n       location: inputLocation\r\n     },\r\n     () => {\r\n       this.fetchData();\r\n     }\r\n   );\r\n };\r\n\r\n setIndex = index => {\r\n   this.setState({\r\n     displayIndex: index\r\n   });\r\n };\r\n\r\n render() {\r\n   const {\r\n     location,\r\n    newData\r\n   } = this.state;\r\n\r\n   return (\r\n     <div className=\"main-div\">\r\n     <Titles />\r\n     <form onSubmit={this.changeLocation}>\r\n     <div className=\"input1\">\r\n       <input\r\n         className=\"location-input\"\r\n         defaultValue={location}\r\n         type=\"text\"\r\n         ref={input => (this.locationInput = input)}\r\n       />\r\n     </div>\r\n   </form>\r\n   <div className= \"location\">\r\n        {location}\r\n      </div>\r\n   <div className=\"weather_data_days\">\r\n       {newData.map(item => {\r\n         return(\r\n\r\n          <div className= \"days_data_container\" key={item.days}>\r\n          <div className=\"days_data\" style={{border: \"1px solid black\"}}>\r\n          <div className=\"days\"><Moment unix format=\"ddd\">{item.days}</Moment></div>\r\n          <img width=\"150\" height=\"150\" src={`http://openweathermap.org/img/w/${item.icons}.png`} />\r\n          <div>{item.temps}°c</div>\r\n          <div>min-{item.minTemps}</div>\r\n          <div>max-{item.maxTemps}</div>\r\n\r\n\r\n         </div>\r\n         </div>)\r\n       })}\r\n   </div>\r\n </div>\r\n  );\r\n }\r\n}\r\nexport default Location;","import React,{Component}from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass CurrentLocation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n      location: \"Miami\",\r\n      days: [],\r\n      daysFull: [],\r\n      temps: [],\r\n      minTemps: [],\r\n      maxTemps: [],\r\n      humidity: [],\r\n      pressure: [],\r\n      wind: [],\r\n      weather: [],\r\n      icons: [],\r\n      displayIndex: 0\r\n    };\r\n  }\r\n\r\n  fetchData = () => {\r\n    const url = this.buildUrlApi();\r\n\r\n    axios.get(url).then(response => {\r\n      this.setState({\r\n        data: response.data\r\n      });\r\n\r\n      const currentData = this.currentData();\r\n      const dayOfWeekFull = [\r\n        \"Saturday\",\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\"\r\n      ];\r\n      const currentDay = \"Now\";\r\n      const currentDayFull =\r\n        dayOfWeekFull[new Date(currentData.dt_txt).getDay()];\r\n      const currentTemp = Math.round(currentData.main.temp);\r\n      const currentMinTemp = Math.round(currentData.main.temp_min);\r\n      const currentMaxTemp = Math.round(currentData.main.temp_max);\r\n      const currentHumidity = Math.round(currentData.main.humidity);\r\n      const currentPressure = Math.round(currentData.main.pressure);\r\n      const currentWind = Math.round(currentData.wind.speed);\r\n      const currentWeather = currentData.weather[0].description;\r\n      const currentIcon = currentData.weather[0].icon;\r\n\r\n      const days = [];\r\n      const daysFull = [];\r\n      const temps = [];\r\n      const minTemps = [];\r\n      const maxTemps = [];\r\n      const humidity = [];\r\n      const pressure = [];\r\n      const wind = [];\r\n      const weather = [];\r\n      const icons = [];\r\n      for (let i = 0; i < this.state.data.list.length; i = i + 1) {\r\n        let date = new Date(this.state.data.list[i].dt_txt);\r\n        // let day = dayOfWeek[date.getDay()];\r\n        let dayFull = dayOfWeekFull[date.getDay()];\r\n        days.push(this.state.data.list[i].dt_txt);\r\n        daysFull.push(dayFull);\r\n        temps.push(Math.round(this.state.data.list[i].main.temp));\r\n        minTemps.push(Math.round(this.state.data.list[i].main.temp_min));\r\n        maxTemps.push(Math.round(this.state.data.list[i].main.temp_max));\r\n        humidity.push(Math.round(this.state.data.list[i].main.humidity));\r\n        pressure.push(Math.round(this.state.data.list[i].main.pressure));\r\n        wind.push(Math.round(this.state.data.list[i].wind.speed));\r\n        weather.push(this.state.data.list[i].weather[0].description);\r\n        icons.push(this.state.data.list[i].weather[0].icon)\r\n      }\r\n        console.log(icons);\r\n        console.log(days);\r\n\r\n      this.setState({\r\n        days: [currentDay, ...days.slice(1)],\r\n        daysFull: [currentDayFull, ...daysFull.slice(1)],\r\n        temps: [currentTemp, ...temps.slice(1)],\r\n        minTemps: [currentMinTemp, ...minTemps.slice(1)],\r\n        maxTemps: [currentMaxTemp, ...maxTemps.slice(1)],\r\n        humidity: [currentHumidity, ...humidity.slice(1)],\r\n        pressure: [currentPressure, ...pressure.slice(1)],\r\n        wind: [currentWind, ...wind.slice(1)],\r\n        weather: [currentWeather, ...weather.slice(1)],\r\n        icons: [currentIcon, ...icons.slice(1)]\r\n      });\r\n    });\r\n  };\r\n\r\n  buildUrlApi = () => {\r\n    const location = encodeURIComponent(this.state.location);\r\n    const urlPrefix = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\r\n    const urlSuffix = \"&APPID=b7d967612159884789686c4f5c41c455&units=metric\";\r\n    return [urlPrefix, location, urlSuffix].join(\"\");\r\n  };\r\n\r\n  currentData = () => {\r\n    const list = this.state.data.list;\r\n    return list.find(e => new Date(e.dt_txt));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  changeLocation = e => {\r\n    e.preventDefault();\r\n    const inputLocation = this.locationInput.value;\r\n    this.setState(\r\n      {\r\n        location: inputLocation\r\n      },\r\n      () => {\r\n        this.fetchData();\r\n      }\r\n    );\r\n  };\r\n\r\n  setIndex = index => {\r\n    this.setState({\r\n      displayIndex: index\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location,\r\n      days,\r\n      daysFull,\r\n      temps,\r\n      maxTemps,\r\n      minTemps,\r\n      humidity,\r\n      pressure,\r\n      wind,\r\n      weather,\r\n      icons,\r\n      displayIndex\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className = \"current_location\">\r\n      <form onSubmit={this.changeLocation}>\r\n          <div className=\"inline-input\">\r\n            {/* <i className=\"mdi mdi-magnify\"></i> */}\r\n            <input\r\n              className=\"location-input\"\r\n              defaultValue={location}\r\n              type=\"text\"\r\n              ref={input => (this.locationInput = input)}\r\n            />\r\n          </div>\r\n        </form><hr/>\r\n        <div className= \"location\">\r\n        {location}\r\n        </div>\r\n        <div className=\"main-display\">\r\n          <div className=\"selection-panel\">\r\n            <div className=\"selection-row\">\r\n              {days.map((item, index) => {\r\n                if (displayIndex === index) {\r\n                  return (\r\n                    <li className = \"days_list\">\r\n                    <button\r\n                      className=\"selected\"\r\n                      key={index + 1}\r\n                      onClick={() => this.setIndex(index)}\r\n                      >\r\n                      {item}\r\n                    </button>\r\n                      </li>\r\n                    \r\n                  );\r\n                } else {\r\n                  return (\r\n                    <li className =\"days_list\">\r\n                    <button\r\n                      key={index + 1}\r\n                      onClick={() => this.setIndex(index)}\r\n                      >\r\n                      {item}\r\n                    </button>\r\n                      </li>\r\n                  );\r\n                }\r\n              })}\r\n            </div>  \r\n          </div>\r\n          <div className=\"weather-information\">\r\n            <div className=\"day\">{daysFull[displayIndex]}</div><hr />\r\n              <div className=\"temp-measurement\">\r\n                <div><img width = \"150\" height= \"150\" src={'http://openweathermap.org/img/w/'+`${icons[displayIndex]}`+'.png'} alt=\"weater-icon\"/></div>\r\n                {temps[displayIndex]}°C\r\n              </div> \r\n              <div className=\"weather-description\"><strong>Description : </strong>{weather[displayIndex]}</div>\r\n              <div className=\"weather-description\"><strong>Humidity : </strong>{humidity[displayIndex]}%</div>\r\n              <div className=\"weather-description\"><strong>Pressure : </strong>{pressure[displayIndex]} hPa</div>\r\n              <div className=\"weather-description\"><strong>Wind-Speed : </strong>{wind[displayIndex]} m/s</div>\r\n              <div className=\"weather-description\"><strong> Max.Temp. : </strong>{maxTemps[displayIndex]}°C</div>\r\n              <div className=\"weather-description\"><strong>Min.Temp. : </strong>{minTemps[displayIndex]}°C</div>\r\n          </div>\r\n        </div><hr/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentLocation;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Location from './components/location';\nimport CurrentLocation from './components/current_location';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nfunction Home() {\n   return (\n     <div className=\"Home\">\n       <App />\n     </div>\n   );\n  }\n\n  function Daily() {\n   return (\n     <div className=\"daily\">\n       <h2>\n         <Location />\n       </h2>\n     </div>\n   );\n  }\n\n  function Hourly() {\n    return (\n      <div className=\"hourly\">\n        <h2>\n          <CurrentLocation />\n        </h2>\n      </div>\n    );\n   }\n  function AppRouter() {\n   return (\n     <Router>\n       <div>\n         <nav>\n           <div className = \"navigation\">\n             \n               <button><Link className=\"list\" to=\"/\">Home</Link></button>\n             \n            \n                <button><Link className=\"list\" to=\"/Daily/\">Daily Forecast</Link></button>\n             \n                <button><Link className=\"list\" to=\"/Hourly/\">Hourly Forecast</Link></button>\n             \n           </div>\n         </nav>\n                <Route exact path=\"/\"  component={Home} />\n                <Route path=\"/Daily\" component={Daily} />\n                <Route path=\"/Hourly\" component={Hourly} />\n       </div>\n     </Router>\n   );\n  }\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));"],"sourceRoot":""}